import { motion, type Variants } from "framer-motion";
import type React from "react";

const paths = [
	"M134.74 140.659C125.796 137.191 115.121 134.3 102.522 131.892L83.6716 128.231C76.6509 126.882 70.6881 125.437 65.7832 123.896C60.9745 122.354 57.0313 120.235 54.2423 117.441C51.357 114.647 49.9144 111.275 49.9144 107.325C49.9144 101.352 52.7035 96.7272 58.1854 93.2589C63.6673 89.8869 71.3613 88.1528 81.3634 88.1528C91.9426 88.1528 100.31 90.754 106.465 95.9564C112.62 101.159 115.698 108.385 115.698 117.633H159.649C159.649 97.9796 152.629 82.7576 138.491 71.9674C124.353 61.1771 104.541 55.782 78.959 55.782C63.7635 55.782 50.4915 57.9015 39.1429 62.2369C27.7944 66.5722 19.0425 72.7381 12.8874 80.7345C6.7322 88.8272 3.65463 98.076 3.65463 108.674C3.65463 119.945 6.53986 129.002 12.4065 136.035C18.2731 142.971 25.5823 148.27 34.3342 151.738C43.1822 155.303 53.7614 158.097 66.0717 160.313L85.8836 163.974C96.6551 165.997 104.926 168.502 110.697 171.585C116.467 174.668 119.256 179.196 119.256 185.169C119.256 191.142 116.371 195.863 110.697 199.427C104.926 202.992 96.9436 204.726 86.5568 204.726C73.958 204.726 64.2444 202.221 57.3198 197.115C50.3953 192.009 46.6445 184.88 46.2598 175.631H0C0.192348 188.83 3.75082 200.102 10.5792 209.254C17.4076 218.407 27.1211 225.343 39.8161 230.16C52.5111 234.881 67.8028 237.29 85.8836 237.29C102.618 237.29 117.044 235.17 128.97 231.027C140.991 226.885 150.032 220.719 156.187 212.626C162.342 204.533 165.42 194.803 165.42 183.338C165.42 171.874 162.534 162.721 156.668 155.977C150.801 149.233 143.492 144.127 134.548 140.755L134.74 140.659Z",
	"M288.907 125.148C302.083 113.49 313.336 103.182 322.568 94.3184L356.903 60.8879H302.757L262.075 100.581C253.227 109.444 242.551 121.198 230.049 136.034L228.029 135.36C228.895 116.573 229.376 97.2087 229.376 77.0733V0H183.404V231.702H229.376V185.65L251.207 164.455H258.132C265.826 164.455 272.269 166.767 277.463 171.199C282.656 175.727 287.08 182.278 290.831 190.853L308.046 231.605H356.903L328.531 167.345C323.723 155.881 317.76 147.403 310.835 142.008C303.911 136.612 294.582 133.433 282.945 132.566L282.656 130.928C283.522 130.061 284.58 129.194 285.83 128.327C287.08 127.46 288.042 126.304 289.004 125.051L288.907 125.148Z",
	"M498.76 150.293C498.76 160.409 497.029 169.272 493.663 176.787C490.2 184.301 485.488 189.985 479.237 194.032C473.081 197.982 465.676 200.005 457.117 200.005C444.999 200.005 435.477 196.151 428.553 188.54C421.628 180.929 418.166 170.428 418.166 156.94V60.8877H371.233V171.102C371.233 184.783 374.022 196.633 379.504 206.653C384.986 216.672 392.584 224.283 402.297 229.293C412.011 234.399 422.59 236.904 434.035 236.904C449.711 236.904 462.791 232.954 473.562 224.957C484.334 216.961 492.028 205.689 496.836 190.853H498.856L499.818 231.605H545.789V60.8877H498.856V150.293H498.76Z",
	"M610.226 0H563.677V231.702H610.226V0Z",
	"M777.28 66.6684C766.22 59.2501 753.813 55.5891 739.964 55.5891C724.961 55.5891 712.074 59.4428 701.302 67.1501C690.531 74.8574 682.26 85.8404 676.489 99.9062H675.143L673.508 60.8879H628.21V292.589H675.143V192.972H676.489C682.26 207.134 690.435 217.925 701.302 225.536C712.074 233.147 724.961 237 739.964 237C753.813 237 766.316 233.243 777.28 225.728C788.244 218.214 796.9 207.712 803.055 194.128C809.21 180.544 812.287 164.648 812.287 146.247C812.287 127.845 809.21 112.238 803.055 98.3648C796.9 84.5879 788.34 73.9904 777.28 66.5721V66.6684ZM759.295 177.558C755.448 186.325 750.159 192.876 743.427 197.211C736.694 201.643 728.808 203.859 719.768 203.859C710.727 203.859 703.226 201.836 696.494 197.693C689.761 193.647 684.568 187.962 680.817 180.833C677.066 173.704 675.239 165.515 675.239 156.459V136.227C675.239 126.978 677.066 118.693 680.817 111.564C684.568 104.434 689.761 98.7501 696.494 94.5111C703.226 90.3684 711.016 88.2489 719.768 88.2489C728.52 88.2489 736.694 90.5611 743.427 95.1855C750.159 99.8099 755.448 106.457 759.295 115.225C763.142 123.992 765.066 134.3 765.066 146.15C765.066 158 763.142 168.694 759.295 177.461V177.558Z",
	"M1184.87 57.9012C1169.19 57.9012 1156.69 59.9244 1147.36 64.0671C1138.03 68.1134 1130.82 74.183 1125.72 82.2757C1120.62 90.3683 1116.78 101.062 1114.18 114.55H1112.54L1111.2 60.8878H1063.11V150.293C1063.11 160.409 1061.38 169.272 1058.01 176.787C1054.55 184.301 1049.84 189.986 1043.59 194.032C1037.43 197.982 1030.03 200.005 1021.47 200.005C1009.35 200.005 999.827 196.151 992.903 188.54C985.978 180.929 982.516 170.428 982.516 156.94V60.8878H892.593L891.246 16.1853H846.333V60.8878H819.597V89.6939H846.333V231.701H893.555V89.6939H935.583V171.103C935.583 184.783 938.372 196.633 943.854 206.653C949.336 216.672 956.934 224.283 966.647 229.293C976.361 234.399 986.94 236.904 998.385 236.904C1014.06 236.904 1027.14 232.954 1037.91 224.958C1048.68 216.961 1056.38 205.689 1061.19 190.853H1063.21L1064.17 231.605H1112.54V166.093C1112.54 152.412 1114.08 141.237 1117.16 132.47C1120.24 123.799 1125.24 116.766 1132.07 111.467C1137.55 107.324 1144.57 104.049 1153.03 101.833C1161.5 99.6171 1172.17 98.172 1184.96 97.4976V57.8049L1184.87 57.9012Z",
	"M1360 141.333C1360 124.762 1356.25 110.022 1348.75 97.0161C1341.25 84.01 1330.96 73.7978 1317.88 66.5721C1304.8 59.2502 1289.79 55.6855 1273.06 55.6855C1255.46 55.6855 1239.97 59.3465 1226.61 66.7648C1213.24 74.1831 1202.95 84.6844 1195.73 98.3649C1188.43 112.045 1184.87 127.845 1184.87 145.669C1184.87 165.13 1188.52 181.7 1195.93 195.477C1203.33 209.254 1213.82 219.659 1227.47 226.596C1241.13 233.532 1257.29 237 1276.04 237C1288.64 237 1300.85 234.592 1312.87 229.678C1324.9 224.861 1334.99 217.539 1343.27 207.809C1351.54 198.078 1356.54 186.325 1358.27 172.355H1316.91C1315.57 177.847 1313.07 182.856 1309.32 187.288C1305.57 191.72 1300.85 195.188 1295.08 197.693C1289.31 200.198 1282.96 201.547 1275.94 201.547C1266.9 201.547 1258.82 199.716 1251.8 195.959C1244.78 192.202 1239.21 186.71 1235.26 179.581C1231.51 172.741 1229.59 164.744 1229.4 155.592H1358.85C1359.52 150.293 1359.81 145.572 1359.81 141.333H1360ZM1250.27 96.3417C1256.9 92.7771 1264.5 91.0429 1273.06 91.0429C1285.66 91.0429 1295.56 94.9929 1302.97 102.797C1309.6 109.83 1313.07 119.175 1313.74 130.447H1229.97C1230.45 123.317 1232.09 116.959 1235.07 111.371C1238.63 104.82 1243.63 99.81 1250.27 96.3417Z",
];

export interface LogoWordsAnimatedProps
	extends React.ComponentProps<typeof motion.svg> {
	delay?: number;
	duration?: number;
}

const draw: Variants = {
	hidden: { pathLength: 0, fillOpacity: 0, strokeWidth: 0, opacity: 0 },
	visible: ({ duration, delay, maxDelay }) => {
		const calculateDuration = (scale: number) => 1 + scale * 1.5;

		return {
			pathLength: 1,
			fillOpacity: 1,
			opacity: 1,
			strokeWidth: 2,
			transition: {
				strokeWidth: {
					delay,
				},
				pathLength: {
					delay,
					type: "spring",
					duration: calculateDuration(duration),
					bounce: 0,
				},
				fillOpacity: {
					ease: "linear",
					delay: 0.25 * delay + maxDelay,
					duration: 0,
				},
			},
		};
	},
};

export const LogoWordsAnimated: React.FC<LogoWordsAnimatedProps> = ({
	duration = 2,
	delay = 0,
	...props
}) => (
	<motion.svg
		xmlns="http://www.w3.org/2000/svg"
		viewBox="0 0 1360 293"
		{...props}
		width="1360"
		height="293"
		fill="currentColor"
		stroke="currentColor"
		initial="hidden"
		whileInView="visible"
		viewport={{ once: true }}>
		{paths.map((definition, i, arr) => (
			<motion.path
				d={definition}
				fill="currentColor"
				stroke="currentColor"
				variants={draw}
				custom={{
					duration,
					delay: delay + i,
					maxDelay: delay + arr.length,
				}}
			/>
		))}
	</motion.svg>
);
